version: 2.1

orbs:
  aws-eks: circleci/aws-eks@1.0.0
  kubernetes: circleci/kubernetes@0.11.1

jobs:
  ## CI JOBS
  build:
    docker:
      - image: cimg/openjdk:8.0.292
    steps:
      - checkout
      - run:
          name: Build
          command: mvn -B -DskipTests clean package
      - persist_to_workspace:
          root: target/
          paths:
            - app.jar
  test:
    docker:
      - image: cimg/openjdk:8.0.292
    steps:
      - checkout
      - run:
          name: Test
          command: mvn test
  lint:
    docker:
      - image: circleci/openjdk:11-jdk
    steps:
      - checkout
      - run:
          name: Analyze on SonarCloud
          command: mvn verify sonar:sonar -Dsonar.projectKey=jonastosti_cloud-devops-nanodegree-final-project    
  build-docker-image:
    machine: true
    steps:
      - checkout
      - attach_workspace:
          at: target/
      - run:
          name: Build Docker Image
          command: docker build -t jonastosti/udacity-final-project:${CIRCLE_WORKFLOW_ID:0:7} . 
      - run:
          name: Push Docker Image
          command:  |
            docker tag jonastosti/udacity-final-project:${CIRCLE_WORKFLOW_ID:0:7} jonastosti/udacity-final-project:latest
            echo $DOCKER_PWD | docker login -u $DOCKER_LOGIN --password-stdin
            docker push jonastosti/udacity-final-project:latest 
  set-up-infrastructure:
     executor: aws-eks/python3
     steps:
       - checkout
       - aws-eks/install-aws-iam-authenticator:
           release-tag: ''
       - run:
           name: Install the eksctl tool
           command: |
             if which eksctl > /dev/null; then
             echo "eksctl is already installed"
             exit 0
             fi
             mkdir -p eksctl_download
             curl --silent --location --retry 5 "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C eksctl_download
             chmod +x eksctl_download/eksctl
             SUDO=""
             if [ $(id -u) -ne 0 ] && which sudo > /dev/null ; then
             SUDO="sudo"
             fi
             $SUDO mv eksctl_download/eksctl /usr/local/bin/
             rmdir eksctl_download 
       - aws-eks/create-cluster:
           cluster-name: api-cluster-capstone
           skip-kubectl-install: false
           verbose: 3
           node-type: t2.micro
           nodes-max: 2
           ssh-access: false
           ssh-public-key: ''
  test-cluster:
    executor: aws-eks/python3
    steps:
      - kubernetes/install
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: api-cluster-capstone
      - run:
          command: |
            kubectl get pods
            kubectl get svc
            kubectl get nodes
            kubectl get services
          name: Test cluster   
  deploy:
    executor: aws-eks/python3
    steps:
      - checkout
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: api-cluster-capstone
          install-kubectl: true
      - kubernetes/create-or-update-resource:
          get-rollout-status: false
          resource-file-path: deployment.yml
          resource-name: deployment/udacity-final-project
workflows:
  default: 
    jobs:
      - build
      - test
      - lint:
          requires:
          - build
          - test
      - build-docker-image:
          requires:
          - lint
      - set-up-infrastructure:
          requires:
          - build-docker-image
      - deploy:
          requires:
          - set-up-infrastructure 
      - test-cluster:
          requires:
          - deploy 


 